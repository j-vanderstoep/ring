name: ci
on:
  pull_request:
  push:
jobs:
  coverage:
    # Don't run duplicate `push` jobs for the repo owner's PRs.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    runs-on: ${{ matrix.host_os }}

    strategy:
      matrix:
        features:
          - # Default

        # TODO: targets
        target:
          # - aarch64-unknown-linux-musl
          # - armv7-unknown-linux-musleabihf

          # i686-unknown-linux-musl doesn't have the profiler.
          - i686-unknown-linux-gnu
          - x86_64-unknown-linux-musl

        mode:
          - # debug

        # Coverage collection is Nightly-only
        rust_channel:
          - nightly

        # TODO: targets
        include:
          - target: i686-unknown-linux-gnu
            host_os: ubuntu-18.04

          - target: x86_64-unknown-linux-musl
            host_os: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - if: ${{ !contains(matrix.host_os, 'windows') }}
        run: mk/install-build-tools.sh --target=${{ matrix.target }} ${{ matrix.features }}

      - uses: actions-rs/toolchain@v1
        with:
          override: true
          target: ${{ matrix.target }}
          toolchain: ${{ matrix.rust_channel }}

      - if: ${{ matrix.target == 'aarch64-apple-darwin' }}
        run: echo "DEVELOPER_DIR=/Applications/Xcode_12.2.app/Contents/Developer" >> $GITHUB_ENV

      - if: ${{ !contains(matrix.host_os, 'windows') }}
        run: |
          RING_COVERAGE=1 mk/cargo.sh +nightly test -vv --target=${{ matrix.target }} ${{ matrix.cargo_options }} ${{ matrix.features }} ${{ matrix.mode }}

      - id: grcov
        uses: actions-rs/grcov@v0.1
        with:
          config: mk/grcov.mk

      - uses: codecov/codecov-action@v1
        with:
          file: ${{ steps.grcov.outputs.report }}
          fail_ci_if_error: true
          verbose: true
